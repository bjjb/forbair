// Generated by CoffeeScript 1.12.7
(function() {
  var files, fs, glob, log, ls, path, read, source, unlink, write;

  fs = require('fs');

  path = require('path');

  glob = require('glob');

  ls = function(pattern) {
    return new Promise(function(resolve, reject) {
      return glob(pattern, function(err, files) {
        return resolve(files);
      });
    });
  };

  read = function(filename) {
    return new Promise(function(resolve, reject) {
      return fs.readFile(filename, 'utf8', function(err, data) {
        if (err != null) {
          return reject(err);
        }
        return resolve(data);
      });
    });
  };

  source = function(filename) {
    switch (path.extname(filename)) {
      case '.html':
        return filename.replace(/\.html$/, '.pug');
      case '.css':
        return filename.replace(/\.css$/, '.styl');
      case '.js':
        return filename.replace(/\.js$/, '.coffee');
      default:
        throw new Error("Unknown source for " + filename);
    }
  };

  write = function(filename) {
    return function(data) {
      return new Promise(function(resolve, reject) {
        return fs.writeFile(filename, data, 'utf8', function(err) {
          if (err != null) {
            return reject(err);
          }
          return resolve();
        });
      });
    };
  };

  unlink = function(filename) {
    return new Promise(function(resolve, reject) {
      return fs.unlink(filename, function(err) {
        if (err != null) {
          return reject(err);
        }
        return resolve(filename);
      });
    });
  };

  files = {
    read: read,
    write: write,
    unlink: unlink,
    ls: ls,
    source: source
  };

  log = function(arg) {
    console.log(arg);
    return arg;
  };

  module.exports = {
    files: files,
    log: log
  };

}).call(this);
